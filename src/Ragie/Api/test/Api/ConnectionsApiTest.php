<?php
/**
 * ConnectionsApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ragie API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ConnectionsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ConnectionsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createConnection
     *
     * Create Connection.
     *
     */
    public function testCreateConnection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOauthRedirectUrlConnectionsOauthPost
     *
     * Create Oauth Redirect Url.
     *
     */
    public function testCreateOauthRedirectUrlConnectionsOauthPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteConnectionConnectionsConnectionIdDeletePost
     *
     * Delete Connection.
     *
     */
    public function testDeleteConnectionConnectionsConnectionIdDeletePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getConnectionConnectionsConnectionIdGet
     *
     * Get Connection.
     *
     */
    public function testGetConnectionConnectionsConnectionIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getConnectionStatsConnectionsConnectionIdStatsGet
     *
     * Get Connection Stats.
     *
     */
    public function testGetConnectionStatsConnectionsConnectionIdStatsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listConnectionSourceTypesConnectionsSourceTypeGet
     *
     * List Connection Source Types.
     *
     */
    public function testListConnectionSourceTypesConnectionsSourceTypeGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listConnectionsConnectionsGet
     *
     * List Connections.
     *
     */
    public function testListConnectionsConnectionsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setConnectionEnabledConnectionsConnectionIdEnabledPut
     *
     * Set Connection Enabled.
     *
     */
    public function testSetConnectionEnabledConnectionsConnectionIdEnabledPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setConnectionLimitsConnectionsConnectionIdLimitPut
     *
     * Set Connection Limits.
     *
     */
    public function testSetConnectionLimitsConnectionsConnectionIdLimitPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for syncConnection
     *
     * Sync Connection.
     *
     */
    public function testSyncConnection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateConnectionConnectionsConnectionIdPut
     *
     * Update Connection.
     *
     */
    public function testUpdateConnectionConnectionsConnectionIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
