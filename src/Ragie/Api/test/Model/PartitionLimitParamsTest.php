<?php
/**
 * PartitionLimitParamsTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ragie API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * PartitionLimitParamsTest Class Doc Comment
 *
 * @category    Class
 * @description PartitionLimitParams
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class PartitionLimitParamsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "PartitionLimitParams"
     */
    public function testPartitionLimitParams()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pages_hosted_limit_monthly"
     */
    public function testPropertyPagesHostedLimitMonthly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pages_processed_limit_monthly"
     */
    public function testPropertyPagesProcessedLimitMonthly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pages_hosted_limit_max"
     */
    public function testPropertyPagesHostedLimitMax()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pages_processed_limit_max"
     */
    public function testPropertyPagesProcessedLimitMax()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_processed_limit_monthly"
     */
    public function testPropertyVideoProcessedLimitMonthly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "video_processed_limit_max"
     */
    public function testPropertyVideoProcessedLimitMax()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "audio_processed_limit_monthly"
     */
    public function testPropertyAudioProcessedLimitMonthly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "audio_processed_limit_max"
     */
    public function testPropertyAudioProcessedLimitMax()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "media_streamed_limit_monthly"
     */
    public function testPropertyMediaStreamedLimitMonthly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "media_streamed_limit_max"
     */
    public function testPropertyMediaStreamedLimitMax()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "media_hosted_limit_monthly"
     */
    public function testPropertyMediaHostedLimitMonthly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "media_hosted_limit_max"
     */
    public function testPropertyMediaHostedLimitMax()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
